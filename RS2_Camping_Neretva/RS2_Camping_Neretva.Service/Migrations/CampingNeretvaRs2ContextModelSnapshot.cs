// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS2_Camping_Neretva.Service.Database;

#nullable disable

namespace RS2_Camping_Neretva.Service.Migrations
{
    [DbContext(typeof(CampingNeretvaRs2Context))]
    partial class CampingNeretvaRs2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId", "WorkerId")
                        .HasName("PK__Activity__35836F130254DC34");

                    b.HasIndex("WorkerId");

                    b.ToTable("ActivityWorkers", (string)null);
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Accommodation", b =>
                {
                    b.Property<int>("AccommodationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccommodationId"));

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccommodationId")
                        .HasName("PK__Accommod__DBB30A518EBF438C");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ActivityId")
                        .HasName("PK__Activiti__45F4A791551271B0");

                    b.HasIndex("FacilityId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacilityId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FacilityId")
                        .HasName("PK__Faciliti__5FB08A74FF9A6D7B");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Parcel", b =>
                {
                    b.Property<int>("ParcelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParcelId"));

                    b.Property<string>("AvailabilityStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Electricity")
                        .HasColumnType("bit");

                    b.Property<string>("ParcelNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Shade")
                        .HasColumnType("bit");

                    b.HasKey("ParcelId")
                        .HasName("PK__Parcels__B5F2167B0DA861B2");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A3894676AAF");

                    b.HasIndex("ReservationId");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"));

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId")
                        .HasName("PK__Persons__AA2FFBE58994B53E");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.RentableItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("AvailabilityStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PricePerDay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId")
                        .HasName("PK__Rentable__727E838B778586B3");

                    b.ToTable("RentableItems");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ParcelId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId")
                        .HasName("PK__Reservat__B7EE5F243AA4F869");

                    b.HasIndex("ParcelId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationAccommodation", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("AccommodationId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "AccommodationId")
                        .HasName("PK__Reservat__BA556F81D6DFD313");

                    b.HasIndex("AccommodationId");

                    b.ToTable("ReservationAccommodations");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationPerson", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "PersonId")
                        .HasName("PK__Reservat__FD4CA09AC6619247");

                    b.HasIndex("PersonId");

                    b.ToTable("ReservationPersons");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationRentable", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "ItemId")
                        .HasName("PK__Reservat__10C9B71CA8B98473");

                    b.HasIndex("ItemId");

                    b.ToTable("ReservationRentables");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationVehicle", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "VehicleId")
                        .HasName("PK__Reservat__8398EA6D3FB216E2");

                    b.HasIndex("VehicleId");

                    b.ToTable("ReservationVehicles");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("datetime");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId")
                        .HasName("PK__Reviews__74BC79CE711461F2");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkerId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4CFDA4BE49");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId")
                        .HasName("PK__Vehicles__476B54927D223A98");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkerId")
                        .HasName("PK__Workers__077C8826ADEFBF7D");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("ReservationActivity", b =>
                {
                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId", "ActivityId")
                        .HasName("PK__Reservat__B3B1155DA7C583C9");

                    b.HasIndex("ActivityId");

                    b.ToTable("ReservationActivities", (string)null);
                });

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityW__Activ__72C60C4A");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .IsRequired()
                        .HasConstraintName("FK__ActivityW__Worke__73BA3083");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Activity", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Facility", "Facility")
                        .WithMany("Activities")
                        .HasForeignKey("FacilityId")
                        .HasConstraintName("FK__Activitie__Facil__6FE99F9F");

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Payment", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", "Reservation")
                        .WithMany("Payments")
                        .HasForeignKey("ReservationId")
                        .HasConstraintName("FK__Payments__Reserv__5070F446");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payments__UserId__5165187F");

                    b.Navigation("Reservation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Reservation", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Parcel", "Parcel")
                        .WithMany("Reservations")
                        .HasForeignKey("ParcelId")
                        .HasConstraintName("FK__Reservati__Parce__3C69FB99");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reservati__UserI__3B75D760");

                    b.Navigation("Parcel");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationAccommodation", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Accommodation", "Accommodation")
                        .WithMany("ReservationAccommodations")
                        .HasForeignKey("AccommodationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Accom__628FA481");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", "Reservation")
                        .WithMany("ReservationAccommodations")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__619B8048");

                    b.Navigation("Accommodation");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationPerson", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Person", "Person")
                        .WithMany("ReservationPeople")
                        .HasForeignKey("PersonId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Perso__5AEE82B9");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", "Reservation")
                        .WithMany("ReservationPeople")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__59FA5E80");

                    b.Navigation("Person");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationRentable", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.RentableItem", "Item")
                        .WithMany("ReservationRentables")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__ItemI__47DBAE45");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", "Reservation")
                        .WithMany("ReservationRentables")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__46E78A0C");

                    b.Navigation("Item");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.ReservationVehicle", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", "Reservation")
                        .WithMany("ReservationVehicles")
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__5DCAEF64");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Vehicle", "Vehicle")
                        .WithMany("ReservationVehicles")
                        .HasForeignKey("VehicleId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Vehic__5EBF139D");

                    b.Navigation("Reservation");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Review", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Reviews__UserId__4AB81AF0");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Worker", "Worker")
                        .WithMany("Reviews")
                        .HasForeignKey("WorkerId")
                        .HasConstraintName("FK__Reviews__WorkerI__4D94879B");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("ReservationActivity", b =>
                {
                    b.HasOne("RS2_Camping_Neretva.Service.Database.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Activ__440B1D61");

                    b.HasOne("RS2_Camping_Neretva.Service.Database.Reservation", null)
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .IsRequired()
                        .HasConstraintName("FK__Reservati__Reser__4316F928");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Accommodation", b =>
                {
                    b.Navigation("ReservationAccommodations");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Facility", b =>
                {
                    b.Navigation("Activities");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Parcel", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Person", b =>
                {
                    b.Navigation("ReservationPeople");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.RentableItem", b =>
                {
                    b.Navigation("ReservationRentables");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Reservation", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("ReservationAccommodations");

                    b.Navigation("ReservationPeople");

                    b.Navigation("ReservationRentables");

                    b.Navigation("ReservationVehicles");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.User", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Reservations");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Vehicle", b =>
                {
                    b.Navigation("ReservationVehicles");
                });

            modelBuilder.Entity("RS2_Camping_Neretva.Service.Database.Worker", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
